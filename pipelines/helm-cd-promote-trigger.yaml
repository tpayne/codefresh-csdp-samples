# This Workflow Template is used to promote your CD pipeline

apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: cd-promote
spec:
  entrypoint: deploy-and-promote
  templates:

    - name: deploy-and-promote
      inputs:
        parameters:
          # i.e. express-stage
          - name: ARGOCD_APP
          - name: ARGOCD_SERVER
            default: argocd-server          
          - name: REPO
          - name: REVISION
            value: 'main'
          - name: GIT_TOKEN_SECRET
          - name: CHART_NAME
          - name: ENVIRONMENT
            value: "dev"
          - name: PROMOTE_TO
            value: 'nil'

      dag:
        # Sync and wait
        tasks:
        
          # Begin deploying
          - name: argocd-sync
            templateRef:
              name: argo-hub.argocd.0.0.1
              template: sync
            arguments:
              parameters:
              - name: app
                value: "{{inputs.parameters.ARGOCD_APP}}"
              - name: serverUrl
                value: "{{inputs.parameters.ARGOCD_SERVER}}"
              - name: flags
                value: "--insecure --plaintext"

          - name: update-tag
            template: update-image-tag
            depends: argocd-sync
            arguments:
              parameters:
              - name: REPO
                value: "{{inputs.parameters.REPO}}"
              - name: REVISION
                value: "{{inputs.parameters.REVISION}}"
              - name: GIT_TOKEN_SECRET
                value: "{{inputs.parameters.GIT_TOKEN_SECRET}}"
              - name: CHART_NAME
                value: "{{inputs.parameters.CHART_NAME}}"
              - name: ENVIRONMENT
                value: "{{inputs.parameters.ENVIRONMENT}}"
              - name: PROMOTE_TO
                value: "{{inputs.parameters.PROMOTE_TO}}"

    - name: update-image-tag
      inputs:
        artifacts:
          - name: repo
            path: /tmp/repo
            git:
              repo: '{{ inputs.parameters.REPO }}'
              revision: '{{ inputs.parameters.REVISION }}'
              usernameSecret:
                name: '{{ inputs.parameters.GIT_TOKEN_SECRET }}'
                key: token
        parameters:
          - name: REPO
          - name: REVISION
            default: 'main'
          - name: GIT_TOKEN_SECRET
          - name: CHART_NAME
          - name: ENVIRONMENT
            default: "dev"
          - name: PROMOTE_TO
            default: 'nil'
          - name: GIT_USER_NAME
            default: "tpayne"
          - name: GIT_USER_EMAIL
            default: "tim.tpayne@gmail.com"
      script:
        image: quay.io/bitnami/git
        env:
          - name: TOKEN
            valueFrom:
              secretKeyRef:
                name: '{{inputs.parameters.GIT_TOKEN_SECRET}}'
                key: token
        command: [ bash ]
        source: |
          curl -SL https://github.com/mikefarah/yq/releases/download/v4.23.1/yq_linux_amd64 -o /usr/bin/yq
          chmod +x /usr/bin/yq
          cd /tmp/repo
          IMAGE_TAG=$(yq eval '.{{ inputs.parameters.CHART_NAME }}.image.tag' helm/{{ inputs.parameters.ENVIRONMENT }}/values.yaml)
          yq eval --inplace ".{{ inputs.parameters.CHART_NAME }}.image.tag=\"$IMAGE_TAG\"" helm/{{ inputs.parameters.PROMOTE_TO }}/values.yaml
          
          git config user.name "{{ inputs.parameters.GIT_USER_NAME }}" && git config --global user.email "{{ inputs.parameters.GIT_USER_EMAIL }}"
          URL=$(printf {{ inputs.parameters.REPO }} | sed "s/https:\/\//https:\/\/token:${TOKEN}@/g")
          git remote set-url origin ${URL}
          git commit -am "Promote {{ inputs.parameters.ENVIRONMENT }} from {{ inputs.parameters.CHART_NAME }} to {{ inputs.parameters.PROMOTE_TO }}"
          git push

